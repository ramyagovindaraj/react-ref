{"version":3,"sources":["components/Home.js","context/AppReducer.js","context/GlobalState.js","module/employee/AddEditEmployee.js","module/employee/Employeelist.js","module/department/Departmentlist.js","module/department/AddEdit.js","App.js","index.js"],"names":["Home","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","rel","target","state","action","employees","filter","employee","payload","updatedEmployee","updatedEmployees","map","departments","initialState","name","location","designation","branch","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addDepartment","department","removeEmployee","addEmployee","editEmployee","AddEditEmployee","history","match","params","isAddMode","useContext","useState","setEmployee","isLoaded","updateLoader","validationSchema","Yup","shape","required","useEffect","selectedEmp","find","emp","parseInt","initialValues","onSubmit","fields","setStatus","setSubmitting","length","push","createEmployee","updateEmployee","errors","touched","isSubmitting","component","disabled","Employeelist","class","key","role","onClick","Departmentlist","removeDepartment","editDepartment","AddEdit","setDepartment","console","log","createDepartment","updateDepartment","App","path","exact","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6662b804.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Home = () => {\n  return (\n    <Fragment>\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        <div className=\"container-fluid\">\n          <a href=\"/\" className=\"navbar-brand d-flex align-items-center\">\n            React CRUD\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarsExampleDefault\"\n            aria-controls=\"navbarsExampleDefault\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n              <Link to=\"/employee\" className=\"nav-link active\">Employees</Link>\n              </li>\n              <li className=\"nav-item\">\n              <Link to=\"/department\" className=\"nav-link active\">Departments</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <ul className=\"navbar-nav ml-sm-auto\">\n          <li className=\"nav-item active\">\n            <a\n              className=\"nav-link active\"\n              href=\"https://github.com/twbs\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              aria-label=\"GitHub\"\n            >\n              <i className=\"fas fa-power-off\"></i>\n            </a>\n          </li>\n        </ul>\n      </nav>\n\n      <div className=\"container-fluid mt-3 vh-100 pb-5\">\n        <section className=\"row mt-5 p-2 min-vh-100\">\n          <div className=\"col\">\n            Welcome to CRUD\n          </div>\n        </section>\n      </div>\n    </Fragment>\n  );\n};\n","export default (state, action) => {\n    switch (action.type) {\n        case 'REMOVE_EMPLOYEE':\n            return {\n                ...state,\n                employees: state.employees.filter(employee => employee.id !== action.payload)\n            };\n        case 'ADD_EMPLOYEES':\n            return {\n                ...state,\n                employees: [...state.employees, action.payload]\n            };\n        case 'EDIT_EMPLOYEE':\n            const updatedEmployee = action.payload;\n\n            const updatedEmployees = state.employees.map(employee => {\n                if (employee.id === updatedEmployee.id) {\n                    return updatedEmployee;\n                }\n                return employee;\n            });\n\n            return {\n                ...state,\n                employees: updatedEmployees\n            };\n        case 'ADD_DEPARTMENT':\n            return {\n                ...state,\n                departments: [...state.departments, action.payload]\n            };\n        default: return state;\n    }\n}","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n  employees: [\n    { id: 1, name: \"Sathish\", location: \"Madurai\", designation: \"API Dev\" },\n    { id: 2, name: \"Saro\", location: \"Coimbatore\", designation: \"UI Dev\" },\n    { id: 3, name: \"Thiru\", location: \"Ramnad\", designation: \"DevOps\" },\n  ],\n  departments: [\n    { id: 1, name: \"Designer\", branch: \"summa\" },\n  ]\n\n};\n\nexport const GlobalContext = createContext(initialState);\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  function removeEmployee(id) {\n    dispatch({\n      type: \"REMOVE_EMPLOYEE\",\n      payload: id,\n    });\n  }\n\n  function addEmployee(employees) {\n    dispatch({\n      type: \"ADD_EMPLOYEES\",\n      payload: employees,\n    });\n  }\n\n  function editEmployee(employees) {\n    dispatch({\n      type: \"EDIT_EMPLOYEE\",\n      payload: employees,\n    });\n  }\n\n  function addDepartment(department) {\n    dispatch({\n      type: \"ADD_DEPARTMENT\",\n      payload: department,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        employees: state.employees,\n        departments: state.departments,\n        addDepartment,\n        removeEmployee,\n        addEmployee,\n        editEmployee,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nexport function AddEditEmployee({ history, match }) {\n  const { id } = match.params;\n  const isAddMode = !id;\n  const { addEmployee, employees, editEmployee } = useContext(GlobalContext);\n  const [employee, setEmployee] = useState({});\n  const [isLoaded, updateLoader] = useState(false);\n  const initialValues = {\n    name: \"\",\n    location: \"\",\n    designation: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    location: Yup.string().required(\"Location is required\"),\n    designation: Yup.string().required(\"Designation is required\"),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    if (isAddMode) {\n      createEmployee(fields, setSubmitting);\n    } else {\n      updateEmployee(fields, setSubmitting);\n    }\n  }\n\n  function createEmployee(fields, setSubmitting) {\n    addEmployee({ ...fields, id: employees.length + 1 });\n    setSubmitting(true);\n    history.push(\".\");\n  }\n\n  function updateEmployee(fields, setSubmitting) {\n    editEmployee(fields);\n    setSubmitting(true);\n    history.push(\"..\");\n  }\n\n  useEffect(() => {\n    if (!isAddMode) {\n      const selectedEmp = employees.find((emp) => emp.id === parseInt(id));\n      setEmployee(selectedEmp);\n    }\n    updateLoader(true);\n  },[isLoaded,employees,id,isAddMode]);\n\n  return (\n    isLoaded && (\n      <Formik\n        initialValues={isAddMode ? initialValues : employee}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting }) => {\n          return (\n            <Form className=\"p-4\">\n              <h1>{isAddMode ? \"Add employee\" : \"Edit employee\"}</h1>\n              <div className=\"form-row pb-3\">\n                <div className=\"form-group col-7\">\n                  <label>Name</label>\n                  <Field\n                    name=\"name\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.name && touched.name ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"name\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-row pb-3\">\n                <div className=\"form-group col-7\">\n                  <label>Location</label>\n                  <Field\n                    name=\"location\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.location && touched.location ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"location\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-row pb-3\">\n                <div className=\"form-group col-7\">\n                  <label>Designation</label>\n                  <Field\n                    name=\"designation\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.designation && touched.designation\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"designation\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n              </div>\n              <div className=\"form-group\">\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"btn btn-primary\"\n                >\n                  {isSubmitting && (\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                  )}\n                  Save\n                </button>\n                <Link to=\"/\" className=\"btn btn-link\">\n                  Cancel\n                </Link>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    )\n  );\n}\n","import React, { Fragment, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\n\nexport const Employeelist = () => {\n  const { employees, removeEmployee, editEmployee } = useContext(GlobalContext);\n  return (\n    <Fragment>\n      <ul class=\"nav justify-content-end\">\n        <li class=\"nav-item\">\n          <Link to=\"/employee/add\">Create</Link>\n        </li>\n      </ul>\n      {employees.length > 0 ? (\n        <Fragment>\n          <ul class=\"list-group list-group-flush\">\n            {employees.map((employee) => (\n              <div className=\"list-group-item\" key={employee.id}>\n                <div class=\"d-flex w-100 justify-content-between\">\n                  <h5 class=\"mb-1\">{employee.name}</h5>\n                  <small>\n                    <div\n                      class=\"btn-group\"\n                      role=\"group\"\n                      aria-label=\"Basic example\"\n                    >\n                      <Link to={`/employee/edit/${employee.id}`}>\n                        <button type=\"button\" class=\"btn btn-outline-secondary\">\n                          <i\n                            class=\"far fa-edit\"\n                            onClick={() => editEmployee(employee.id)}\n                          ></i>\n                        </button>\n                      </Link>\n                      <button type=\"button\" class=\"btn btn-outline-secondary\">\n                        <i\n                          class=\"far fa-trash-alt\"\n                          onClick={() => removeEmployee(employee.id)}\n                        ></i>\n                      </button>\n                    </div>\n                  </small>\n                </div>\n                <small>{employee.designation}</small>\n              </div>\n            ))}\n          </ul>\n        </Fragment>\n      ) : (\n        <p className=\"text-center\">No data</p>\n      )}\n    </Fragment>\n  );\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\n\nexport const Departmentlist = () => {\n    const { departments, removeDepartment, editDepartment } = useContext(GlobalContext);\n    return (\n        <Fragment>\n            <ul class=\"nav justify-content-end\">\n                <li class=\"nav-item\">\n                    <Link to=\"/department/add\">Create</Link>\n                </li>\n            </ul>\n            {departments.length > 0 ? (\n                <Fragment>\n                    <ul class=\"list-group list-group-flush\">\n                        {departments.map((department) => (\n                            <div className=\"list-group-item\" key={department.id}>\n                                <div class=\"d-flex w-100 justify-content-between\">\n                                    <h5 class=\"mb-1\">{department.name}</h5>\n                                    <small>\n                                        <div\n                                            class=\"btn-group\"\n                                            role=\"group\"\n                                            aria-label=\"Basic example\"\n                                        >\n                                            <Link to={`/department/edit/${department.id}`}>\n                                                <button type=\"button\" class=\"btn btn-outline-secondary\">\n                                                    <i\n                                                        class=\"far fa-edit\"\n                                                        onClick={() => editDepartment(department.id)}\n                                                    ></i>\n                                                </button>\n                                            </Link>\n                                            <button type=\"button\" class=\"btn btn-outline-secondary\">\n                                                <i\n                                                    class=\"far fa-trash-alt\"\n                                                    onClick={() => removeDepartment(department.id)}\n                                                ></i>\n                                            </button>\n                                        </div>\n                                    </small>\n                                </div>\n                                <small>{department.designation}</small>\n                            </div>\n                        ))}\n                    </ul>\n                </Fragment>\n            ) : (\n                    <p className=\"text-center\">No data</p>\n                )}\n        </Fragment>\n    );\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nexport function AddEdit({ history, match }) {\n    const { id } = match.params;\n    const isAddMode = !id;\n    const { addDepartment, departments, editDepartment } = useContext(GlobalContext);\n    const [department, setDepartment] = useState({});\n    const [isLoaded, updateLoader] = useState(false);\n    const initialValues = {\n        name: \"\",\n        branch: \"\",\n\n    };\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        branch: Yup.string().required(\"branch is required\"),\n\n    });\n\n    function onSubmit(fields, { setStatus, setSubmitting }) {\n        setStatus();\n        console.log(\"success\", fields)\n        if (isAddMode) {\n            createDepartment(fields, setSubmitting);\n        } else {\n            updateDepartment(fields, setSubmitting);\n        }\n    }\n\n    function createDepartment(fields, setSubmitting) {\n        addDepartment({ ...fields, id: departments.length + 1 });\n        setSubmitting(true);\n        history.push(\".\");\n    }\n\n    function updateDepartment(fields, setSubmitting) {\n        editDepartment(fields);\n        setSubmitting(true);\n        history.push(\"..\");\n    }\n\n    useEffect(() => {\n        if (!isAddMode) {\n            const selectedEmp = departments.find((emp) => emp.id === parseInt(id));\n            setDepartment(selectedEmp);\n        }\n        updateLoader(true);\n    }, [isLoaded, departments, id, isAddMode]);\n\n    return (\n        isLoaded && (\n            <Formik\n                initialValues={isAddMode ? initialValues : department}\n                validationSchema={validationSchema}\n                onSubmit={onSubmit}\n            >\n                {({ errors, touched, isSubmitting }) => {\n                    return (\n                        <Form className=\"p-4\">\n                            <h1>{isAddMode ? \"Add Department\" : \"Edit Department\"}</h1>\n                            <div className=\"form-row pb-3\">\n                                <div className=\"form-group col-7\">\n                                    <label>Name</label>\n                                    <Field\n                                        name=\"name\"\n                                        type=\"text\"\n                                        className={\n                                            \"form-control\" +\n                                            (errors.name && touched.name ? \" is-invalid\" : \"\")\n                                        }\n                                    />\n                                    <ErrorMessage\n                                        name=\"name\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-row pb-3\">\n                                <div className=\"form-group col-7\">\n                                    <label>Branch</label>\n                                    <Field\n                                        name=\"branch\"\n                                        type=\"text\"\n                                        className={\n                                            \"form-control\" +\n                                            (errors.branch && touched.branch ? \" is-invalid\" : \"\")\n                                        }\n                                    />\n                                    <ErrorMessage\n                                        name=\"branch\"\n                                        component=\"div\"\n                                        className=\"invalid-feedback\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button\n                                    type=\"submit\"\n                                    disabled={isSubmitting}\n                                    className=\"btn btn-primary\"\n                                >\n                                    {isSubmitting && (\n                                        <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                                    )}\n                  Save\n                </button>\n                                <Link to=\"/department\" className=\"btn btn-link\">\n                                    Cancel\n                </Link>\n                            </div>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        )\n    );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./components/Home\";\nimport { AddEditEmployee, Employeelist } from \"./module/employee\"\nimport { Departmentlist, AddEdit } from \"./module/department\"\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/employee\" component={Employeelist} exact />\n        <Route path=\"/employee/add\" component={AddEditEmployee} exact />\n        <Route path=\"/employee/edit/:id\" component={AddEditEmployee} exact />\n        <Route path=\"/department\" component={Departmentlist} exact />\n        <Route path=\"/department/add\" component={AddEdit} exact />\n      </Switch>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/react-ref/\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}